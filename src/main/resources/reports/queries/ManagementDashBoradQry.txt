select distinct mr.REG_NM, 
            OUTS.loans, OUTS_unrech.loans clnts_unrech, OUTS_rech.loans clnts_rech, OUTS_new.loans clnts_new, 
            OUTS_new.DSB_AMT dsb_amt_new,            
            OUTS.OUTS_CRNT, OUTS_unrech.OUTS_CRNT OUTS_unrech, OUTS_rech.OUTS_CRNT OUTS_rech,OUTS_new.OUTS_CRNT OUTS_new,                        
            P_1_rech_grc1.OUTS_p1 P_1_rech_grc1_par,
            P_1_rech_grc2.OUTS_p1 P_1_rech_grc2_par,
            P_1_rech_grc3.OUTS_p1 P_1_rech_grc3_par,
            P_1_rech_grc4.OUTS_p1 P_1_rech_grc4_par,
            P_3_rech_grc1.OUTS_p1 P_3_rech_grc1_par,
            P_3_rech_grc2.OUTS_p1 P_3_rech_grc2_par,
            P_3_rech_grc3.OUTS_p1 P_3_rech_grc3_par,
            P_3_rech_grc4.OUTS_p1 P_3_rech_grc4_par,
            p_1.OUTS_p1 p_1_outs,
            P_1_unrech.OUTS_p1 P_1_unrech_outs,
            P_1_rech.OUTS_p1 P_1_rech_outs,
            P_1_new.OUTS_p1 P_1_new_outs,
            P_3.OUTS_p1 P_3_outs,
            P_3_unrech.OUTS_p1 P_3_unrech_outs,
            P_3_rech.OUTS_p1 P_3_rech_outs,
            P_3_new.OUTS_p1 P_3_new_outs,
            (case when P_1.OUTS_p1 > 0 then round(nvl(p_1.OUTS_p1,1) / nvl(OUTS.OUTS_CRNT,1) * 100 ,2) else 0 end) par_p1_perc,
            (case when P_1_unrech.OUTS_p1 > 0 then round(nvl(P_1_unrech.OUTS_p1,1) / nvl(OUTS_unrech.OUTS_CRNT,1) * 100 ,2) else 0 end) par_p1_perc_unrech,
            (case when P_1_rech.OUTS_p1 > 0 then round(nvl(P_1_rech.OUTS_p1,1) / nvl(OUTS_rech.OUTS_CRNT,1) * 100 ,2) else 0 end) par_p1_perc_rech,
            (case when P_1_new.OUTS_p1 > 0 then round(nvl(P_1_new.OUTS_p1,1) / nvl(OUTS_new.OUTS_CRNT,1) * 100 ,2) else 0 end) par_p1_perc_new,
            (case when P_3.OUTS_p1 > 0 then round(nvl(p_3.OUTS_p1,1) / nvl(OUTS.OUTS_CRNT,1) * 100 ,2) else 0 end) par_p3_perc,
            (case when P_3_unrech.OUTS_p1 > 0 then round(nvl(P_3_unrech.OUTS_p1,1) / nvl(OUTS_unrech.OUTS_CRNT,1) * 100 ,2) else 0 end) par_p3_perc_unrech,
            (case when P_3_rech.OUTS_p1 > 0 then round(nvl(P_3_rech.OUTS_p1,1) / nvl(OUTS_rech.OUTS_CRNT,1) * 100 ,2) else 0 end) par_p3_perc_rech,
            (case when P_3_new.OUTS_p1 > 0 then round(nvl(P_3_new.OUTS_p1,1) / nvl(OUTS_new.OUTS_CRNT,1) * 100 ,2) else 0 end) par_p3_perc_new,
            OUTS_rech_grc1.loans OUTS_rech_grc1, OUTS_rech_grc2.loans OUTS_rech_grc2, OUTS_rech_grc3.loans OUTS_rech_grc3, OUTS_rech_grc4.loans OUTS_rech_grc4,
            (case when P_1_rech_grc1.OUTS_p1 > 0 then round(nvl(P_1_rech_grc1.OUTS_p1,1) / nvl(OUTS_rech_grc1.OUTS_CRNT,1) * 100 ,2) else 0 end) P_1_rech_grc1,
            (case when P_1_rech_grc2.OUTS_p1 > 0 then round(nvl(P_1_rech_grc2.OUTS_p1,1) / nvl(OUTS_rech_grc2.OUTS_CRNT,1) * 100 ,2) else 0 end) P_1_rech_grc2,
            (case when P_1_rech_grc3.OUTS_p1 > 0 then round(nvl(P_1_rech_grc3.OUTS_p1,1) / nvl(OUTS_rech_grc3.OUTS_CRNT,1) * 100 ,2) else 0 end) P_1_rech_grc3,
            (case when P_1_rech_grc4.OUTS_p1 > 0 then round(nvl(P_1_rech_grc4.OUTS_p1,1) / nvl(OUTS_rech_grc4.OUTS_CRNT,1) * 100 ,2) else 0 end) P_1_rech_grc4,            
            (case when P_3_rech_grc1.OUTS_p1 > 0 then round(nvl(P_3_rech_grc1.OUTS_p1,1) / nvl(OUTS_rech_grc1.OUTS_CRNT,1) * 100 ,2) else 0 end) P_3_rech_grc1,
            (case when P_3_rech_grc2.OUTS_p1 > 0 then round(nvl(P_3_rech_grc2.OUTS_p1,1) / nvl(OUTS_rech_grc2.OUTS_CRNT,1) * 100 ,2) else 0 end) P_3_rech_grc2,
            (case when P_3_rech_grc3.OUTS_p1 > 0 then round(nvl(P_3_rech_grc3.OUTS_p1,1) / nvl(OUTS_rech_grc3.OUTS_CRNT,1) * 100 ,2) else 0 end) P_3_rech_grc3,
            (case when P_3_rech_grc4.OUTS_p1 > 0 then round(nvl(P_3_rech_grc4.OUTS_p1,1) / nvl(OUTS_rech_grc4.OUTS_CRNT,1) * 100 ,2) else 0 end) P_3_rech_grc4,
            P_1_rech_grc1.loans_p1 P_1_rech_grc1_loans, 
            P_1_rech_grc2.loans_p1 P_1_rech_grc2_loans, 
            P_1_rech_grc3.loans_p1 P_1_rech_grc3_loans,
            P_1_rech_grc4.loans_p1 P_1_rech_grc4_loans, 
            P_1_rech_grc1.OUTS_p1 P_1_rech_grc1_#,          
            P_1_rech_grc2.OUTS_p1 P_1_rech_grc2_#, 
            P_1_rech_grc3.OUTS_p1 P_1_rech_grc3_#,
            P_1_rech_grc4.OUTS_p1 P_1_rech_grc4_#,
            P_3_rech_grc1.loans_p1 P_3_rech_grc1_loans,
            P_3_rech_grc2.loans_p1 P_3_rech_grc2_loans, 
            P_3_rech_grc3.loans_p1 P_3_rech_grc3_loans,
            P_3_rech_grc4.loans_p1 P_3_rech_grc4_loans,
            P_3_rech_grc1.OUTS_p1 P_3_rech_grc1_#,
            P_3_rech_grc2.OUTS_p1 P_3_rech_grc2_#,
            P_3_rech_grc3.OUTS_p1 P_3_rech_grc3_#,
            P_3_rech_grc4.OUTS_p1 P_3_rech_grc4_#,
            nvl(OUTS_rech_grc1.OUTS_CRNT,1) OUTS_rech_grc1_outs,
            nvl(OUTS_rech_grc2.OUTS_CRNT,1) OUTS_rech_grc2_outs,
            nvl(OUTS_rech_grc3.OUTS_CRNT,1) OUTS_rech_grc3_outs,
            nvl(OUTS_rech_grc4.OUTS_CRNT,1) OUTS_rech_grc4_outs,
            OUTS.OUTS_PR_CRNT,
            OUTS.OUTS_SC_CRNT,
            OUTS_unrech.OUTS_PR_CRNT OUTS_PR_unrech,
            OUTS_unrech.OUTS_SC_CRNT OUTS_SC_unrech, 
            OUTS_rech.OUTS_PR_CRNT OUTS_PR_rech,
            OUTS_rech.OUTS_SC_CRNT OUTS_PC_rech,
            OUTS_new.OUTS_PR_CRNT OUTS_PRnew,
            OUTS_new.OUTS_SC_CRNT OUTS_SCnew
            from con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp,mw_brnch mb, 
                mw_area ma, mw_reg mr,
              (              
              SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans, 
                ROUND(SUM(NVL(cp.DISBURSED_AMOUNT,0))) DSB_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_crnt,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) outs_pr_crnt,  
                ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_sc_crnt
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') and to_date(sysdate)-1
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                and product_id <> 8
                group by mr.reg_nm                                                                                              
                )OUTS, 
                (                              
                SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans, 
                ROUND(SUM(NVL(cp.DISBURSED_AMOUNT,0))) DSB_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_crnt,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) outs_pr_crnt,  
                ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_sc_crnt
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
               and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                and (cp.GRACE_PERD is null)
                and product_id <> 8
                group by mr.reg_nm                                                                                    
                )OUTS_unrech,  
                (              
              SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans, 
                ROUND(SUM(NVL(cp.DISBURSED_AMOUNT,0))) DSB_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_crnt,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) outs_pr_crnt,  
                ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_sc_crnt
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                and (cp.GRACE_PERD is not null)
                and product_id <> 8
                group by mr.reg_nm                                                                                     
                )OUTS_rech, 
                (
              SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans, 
                ROUND(SUM(NVL(cp.DISBURSED_AMOUNT,0))) DSB_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_crnt,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) outs_pr_crnt,  
                ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_sc_crnt
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date > '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                --and (cp.GRACE_PERD is null)
                and product_id <> 8
                group by mr.reg_nm                                                   
                )OUTS_new,               
                (  
                SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_sc,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') and to_date(sysdate)-1
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                --and (cp.GRACE_PERD is null)
                and product_id <> 8
                group by mr.reg_nm 
                )P_1,
                (  
                SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_sc,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD is null)
                and product_id <> 8
                group by mr.reg_nm
                )P_1_unrech,
               ( 
                SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_sc,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
               and (cp.GRACE_PERD is not null)
                and product_id <> 8
                group by mr.reg_nm
                )P_1_rech,
                (  
                SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_sc,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date > '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                --and (cp.GRACE_PERD is NOT null)
                and product_id <> 8
                group by mr.reg_nm 
                )P_1_new,
                (  
                SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_sc,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  OUTSTANDING_PRINCIPAL > 0 
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and cp.overdue_days > 28.50
                --and (cp.GRACE_PERD is null)
                and product_id <> 8
                group by mr.reg_nm 
                )P_3,
                (  
                SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_sc,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD is null)
                and cp.overdue_days > 28.50
                and product_id <> 8
                group by mr.reg_nm
                )P_3_unrech,
               ( 
                SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_sc,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD is not null)
                and cp.overdue_days > 28.50
                and product_id <> 8
                group by mr.reg_nm
                )P_3_rech,
               (  
                SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_sc,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date > '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                --and (cp.GRACE_PERD is NOT null)
                and cp.overdue_days > 28.50
                and product_id <> 8
                group by mr.reg_nm 
                )P_3_new,                
                 (
              SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans, 
                ROUND(SUM(NVL(cp.DISBURSED_AMOUNT,0))) DSB_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_crnt
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                and (cp.GRACE_PERD = 0)
                and product_id <> 8
                group by mr.reg_nm                                                                      
                )OUTS_rech_grc1, 
                 (
              SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans, 
                ROUND(SUM(NVL(cp.DISBURSED_AMOUNT,0))) DSB_AMT,
               ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_crnt
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                and (cp.GRACE_PERD = 1)
                and product_id <> 8
                group by mr.reg_nm                                                                              
                )OUTS_rech_grc2, 
                 (
              SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans, 
                ROUND(SUM(NVL(cp.DISBURSED_AMOUNT,0))) DSB_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_crnt
               FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                and (cp.GRACE_PERD = 2)
                and product_id <> 8
                group by mr.reg_nm                                                                            
                )OUTS_rech_grc3, 
                 (
              SELECT mr.reg_nm,
              COUNT(distinct cp.loan_cycle_id) loans, 
                ROUND(SUM(NVL(cp.DISBURSED_AMOUNT,0))) DSB_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_crnt
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                and (cp.GRACE_PERD > 2)
                and product_id <> 8
                group by mr.reg_nm                                                                    
                )OUTS_rech_grc4,
                (  
                SELECT mr.reg_nm,
                COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
               and (cp.GRACE_PERD = 0)
               and product_id <> 8
                group by mr.reg_nm
                )P_1_rech_grc1,
                (  
                SELECT mr.reg_nm,
                COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD = 1)
                and product_id <> 8
                group by mr.reg_nm
                )P_1_rech_grc2,
                (  
                SELECT mr.reg_nm,
                COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD = 2)
                and product_id <> 8
                group by mr.reg_nm        
                )P_1_rech_grc3,
                (  
                SELECT mr.reg_nm,
                COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
               AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD > 2)
                and product_id <> 8
               group by mr.reg_nm              
                )P_1_rech_grc4,
                (  
                SELECT mr.reg_nm,
                COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD = 0)
                and overdue_days > 28.50
                and product_id <> 8
                group by mr.reg_nm 
                )P_3_rech_grc1,
                (  
                SELECT mr.reg_nm,
                COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD = 1)
                and overdue_days > 28.50
                and product_id <> 8
                group by mr.reg_nm 
                )P_3_rech_grc2,
                (  
                SELECT mr.reg_nm,
                COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD = 2)
                and overdue_days > 28.50
                and product_id <> 8
                group by mr.reg_nm 
                )P_3_rech_grc3,
                (  
                SELECT mr.reg_nm,
                COUNT(distinct cp.loan_cycle_id) loans_p1, 
                ROUND(SUM(NVL(cp.OVERDUE_AMOUNT,0))) + ROUND(SUM(NVL(cp.OVERDUE_AMOUNT_SC,0))) OD_AMT,
                ROUND(SUM(NVL(cp.OUTSTANDING_PRINCIPAL,0))) + ROUND(SUM(NVL(cp.OUTSTANDING_SC,0))) outs_p1
                FROM con_mon_asofdate_rschd@LINK_TO_TESTMWC.KASHF.ORG.PK cp, mw_brnch mb, 
                mw_area ma, mw_reg mr 
                where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
                and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
                and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
                and (CP.LOAN_COMPLETION_DATE IS NULL OR CP.LOAN_COMPLETION_DATE > to_date(sysdate)-1)
                AND disbursed_date between to_date('01-may-2005') AND '30-apr-2020'
                AND  (NVL(OUTSTANDING_PRINCIPAL,0) + NVL(OUTSTANDING_SC,0)) > 0
                AND (ROUND((NVL(cp.OVERDUE_AMOUNT,0))) + ROUND((NVL(cp.OVERDUE_AMOUNT_SC,0)))) > 0
                and (cp.GRACE_PERD > 2)
                and overdue_days > 28.50
                and product_id <> 8
                group by mr.reg_nm 
                )P_3_rech_grc4
         where cp.branch_ID = mb.brnch_seq and mb.crnt_rec_flg=1
         and mb.area_seq=ma.area_seq and ma.crnt_rec_flg=1
         and ma.reg_seq = mr.reg_seq and mr.crnt_rec_flg=1 
         and mr.REG_NM = OUTS.REG_NM(+)  
         and mr.REG_NM = OUTS_unrech.REG_NM(+)
         and mr.REG_NM = OUTS_rech.REG_NM(+)  
         and mr.REG_NM = OUTS_new.REG_NM(+)            
         and mr.REG_NM = P_1.REG_NM(+)     
         and mr.REG_NM = P_1_unrech.REG_NM(+)
         and mr.REG_NM = P_1_rech.REG_NM(+)
         and mr.REG_NM = P_1_new.REG_NM(+)
         and mr.REG_NM = P_3.REG_NM(+)     
         and mr.REG_NM = P_3_unrech.REG_NM(+)
         and mr.REG_NM = P_3_rech.REG_NM(+)
         and mr.REG_NM = P_3_new.REG_NM(+)
         and mr.REG_NM = OUTS_rech_grc1.REG_NM(+)
         and mr.REG_NM = OUTS_rech_grc2.REG_NM(+)
         and mr.REG_NM = OUTS_rech_grc3.REG_NM(+)
         and mr.REG_NM = OUTS_rech_grc4.REG_NM(+)
         and mr.REG_NM = P_1_rech_grc1.REG_NM(+)
         and mr.REG_NM = P_1_rech_grc2.REG_NM(+)
         and mr.REG_NM = P_1_rech_grc3.REG_NM(+)
         and mr.REG_NM = P_1_rech_grc4.REG_NM(+)
         and mr.REG_NM = P_3_rech_grc1.REG_NM(+)
         and mr.REG_NM = P_3_rech_grc2.REG_NM(+)
         and mr.REG_NM = P_3_rech_grc3.REG_NM(+)
         and mr.REG_NM = P_3_rech_grc4.REG_NM(+)